# Define Ansible virtualization facts
- name: Define Ansible virtualization facts
  setup:
    gather_subset: "!all,!min,virtual"

# ip_conntrack module configuration and loading
- name: Configure ip_conntrack kernel module when loaded
  template:
    src: system/modprobe.conf.j2
    dest: /etc/modprobe.d/nf_conntrack.conf
    owner: root
    group: root
    mode: '0644'
  vars:
    kernel_module_name: ip_conntrack
    kernel_module_options:
      hashsize: "{{ vars['system_parameters_net.nf_conntrack_max'] // 8 }}"

- name: Load nf_conntrack (ip_conntrack) kernel module
  community.general.modprobe:
    name: nf_conntrack

- name: Configure ip_conntrack kernel module hashsize setting
  template:
    src: system/sysfs_variable.j2
    dest: /sys/module/nf_conntrack/parameters/hashsize
    owner: root
    group: root
    mode: '0600'
    unsafe_writes: true
  vars:
    value: "{{ vars['system_parameters_net.nf_conntrack_max'] // 8 }}"

- name: Ensure ip_conntrack is loaded at boot
  template:
    src: system/modules-load.conf.j2
    dest: /etc/modules-load.d/ip_conntrack.conf
    owner: root
    group: root
    mode: '0644'
  vars:
    kernel_module_name: ip_conntrack

- name: Ensure nvme_tcp is loaded at boot
  template:
    src: system/modules-load.conf.j2
    dest: /etc/modules-load.d/nvme_tcp.conf
    owner: root
    group: root
    mode: '0644'
  vars:
    kernel_module_name: nvme_tcp

# Configure GRUB
- name: Configure grub
  template:
    src: grub/default.j2
    dest: /etc/default/grub
    owner: root
    group: root
    mode: '0644'
  register: grub_defaults

- name: Generate GRUB configuration file
  command: update-grub
  when: grub_defaults.changed # noqa: no-handler
  changed_when: true

# Configure sysctl parameters
- name: Configure sysctl parameters
  template:
    src: sysctl/bcpc.conf.j2
    dest: /etc/sysctl.d/70-bcpc.conf
    owner: root
    group: root
    mode: '0644'
  register: sysctl_bcpc

- name: Reload sysctl settings
  command: sysctl -p /etc/sysctl.d/70-bcpc.conf
  when: sysctl_bcpc.changed # noqa: no-handler
  changed_when: true

# TODO: Remove stanza after a couple of releases have passed
# Remove /etc/updatedb.conf
- name: Remove /etc/updatedb.conf
  file:
    path: /etc/updatedb.conf
    state: absent

- name: Stop and disable unused services
  service:
    name: "{{ item }}"
    enabled: false
    state: stopped
  with_items:
    - accounts-daemon
    - atd
    - fwupd
    - fwupd-refresh
    - irqbalance
    - multipathd.socket
    - multipathd
    - packagekit
    - snapd.socket
    - snapd
    - snapd.seeded
    - systemd-networkd-wait-online
    - udisks2
    - ufw
    - upower
  ignore_errors: true # noqa: ignore-errors

- name: Purge unused service packages
  apt:
    name: "{{ item }}"
    purge: true
    state: absent
  with_items:
    - accountsservice
    - at
    - fwupd
    - fwupd-signed
    - multipath-tools
    - packagekit
    - packagekit-tools
    - snapd
    - ubuntu-advantage-tools
    - update-notifier-common
    - ubuntu-release-upgrader-core
    - udisks2
    - ufw
    - upower

# Remove unnecessary user accounts (vs. nologin shells)
- name: Remove specified user accounts
  user:
    name: "{{ item }}"
    state: absent
  loop:
    - 'backup'
    - 'games'
    - 'gnats'
    - 'irc'
    - 'list'
    - 'lp'
    - 'mail'
    - 'news'
    - 'proxy'
    - 'uucp'

# Remove unnecessary groups from defaults
- name: Remove specified groups
  group:
    name: "{{ item }}"
    state: absent
  loop:
    - 'audio'
    - 'cdrom'
    - 'fax'
    - 'floppy'
    - 'games'
    - 'gnats'
    - 'irc'
    - 'list'
    - 'lp'
    - 'mail'
    - 'news'
    - 'tape'
    - 'uucp'
    - 'video'
    - 'voice'

# Purge off dependencies of uneeded packages
- name: Purge unused packages
  apt:
    autoremove: true
    purge: true

# Configure motd-news
- name: Configure motd-news
  template:
    src: system/motd-news.j2
    dest: /etc/default/motd-news
    owner: root
    group: root
    mode: '0644'
  vars:
    enabled: false

# Configure system kernel
- name: Configure system kernel
  apt:
    name: "{{ item }}"
  when: not kernel_pin_version
  with_items:
    - "linux-{{ kernel_variant }}"
    - "linux-tools-{{ kernel_variant }}"

- name: Configure versioned system kernel
  apt:
    name: "{{ item }}"
  when: kernel_pin_version
  with_items:
    - "linux-headers-{{ kernel_version }}-{{ kernel_variant }}"
    - "linux-image-{{ kernel_version }}-{{ kernel_variant }}"
    - "linux-modules-{{ kernel_version }}-{{ kernel_variant }}"
    - "linux-modules-extra-{{ kernel_version }}-{{ kernel_variant }}"
    # HWE kernel-specific tools are pulled in by {{ version }}-generic
    # metapackages.
    - "linux-tools-{{ kernel_version }}-{{ 'generic' if kernel_variant != 'lowlatency' else 'lowlatency' }}"

# Install kexec-tools
- name: Install kexec-tools
  apt:
    name: kexec-tools

# Configure locale categories
- name: Define locale categories
  set_fact:
    categories: >
      {{
        categories | default('')
        + item.key
        + ('=' + item.value if item.value != '' else '')
      }}
  with_items: "{{ locale_categories | dict2items }}"

- name: Configure locale categories
  command: update-locale {{ categories }}
  changed_when: false

# Install common packages
- name: Install common packages
  apt:
    name: "{{ item }}"
  with_items:
    - "bash-completion"
    - "bc"
    - "bmon"
    - "conntrack"
    - "cpu-checker"
    - "crudini"
    - "curl"
    - "dhcpdump"
    - "ethtool"
    - "fio"
    - "htop"
    - "iotop"
    - "iperf"
    - "jq"
    - "ksh"
    - "linux-tools-common"
    - "lldpd"
    - "nmap"
    - "python3-ldap"
    - "python3-memcache"
    - "python3-mysqldb"
    - "python3-openstackclient"
    - "python3-pip"
    - "python3-six"
    - "rsyslog"
    - "screen"
    - "sosreport"
    - "sysstat"
    - "tmux"
    - "traceroute"
    - "tshark"
    - "vim"
    - "xinetd"

# Configure /etc/screenrc
- name: Configure /etc/screenrc
  copy:
    src: files/screen/screenrc
    dest: /etc/screenrc
    owner: root
    group: root
    mode: '0644'

# Configure /etc/vim/vimrc
- name: Configure /etc/vim/vimrc
  copy:
    src: files/vim/vimrc
    dest: /etc/vim/vimrc
    owner: root
    group: root
    mode: '0644'
